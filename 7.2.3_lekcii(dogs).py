import requests
from tkinter import *
from tkinter import ttk
from tkinter import messagebox as mb
from PIL import Image, ImageTk
from io import BytesIO
from tkinter import Toplevel

def get_random_dog_image():
    try:
        response = requests.get('https://dog.ceo/api/breeds/image/random')
        response.raise_for_status()
        data = response.json()
        return data['message']
    except Exception as e:
        mb.showerror("–û—à–∏–±–∫–∞", f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {e}")
        return None

def show_image():
    image_url = get_random_dog_image()
    if image_url:
        try:
            
            response = requests.get(image_url, stream=True)# üì° –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ URL –ø–æ—Ç–æ–∫–æ–≤–æ (—ç–∫–æ–Ω–æ–º–∏–º –ø–∞–º—è—Ç—å)
            response.raise_for_status() # ‚ö†Ô∏è –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –∑–∞–ø—Ä–æ—Å–∞ (–≤—ã–∑–æ–≤–µ—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ)
            img_data = BytesIO(response.content)# üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –±–∞–π—Ç—ã –≤ —Ñ–∞–π–ª–æ–ø–æ–¥–æ–±–Ω—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è PIL
            img = Image.open(img_data)# üñºÔ∏è –û—Ç–∫—Ä—ã–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–∑ –±–∞–π—Ç–æ–≤ (—Å–æ–∑–¥–∞–µ–º PIL Image –æ–±—ä–µ–∫—Ç)
            img_size = (int(width_spinbox.get()), int(height_spinbox.get()))
            img.thumbnail(img_size)# üìè –£–º–µ–Ω—å—à–∞–µ–º —Ä–∞–∑–º–µ—Ä –¥–æ 300x300 –ø–∏–∫—Å–µ–ª–µ–π (—Å–æ—Ö—Ä–∞–Ω—è—è –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏)
            img = ImageTk.PhotoImage(img)# üîÑ –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º PIL Image –≤ —Ñ–æ—Ä–º–∞—Ç –ø–æ–Ω—è—Ç–Ω—ã–π tkinter
            new_window = Toplevel(window)# üåü –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫–Ω–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
            new_window.title("–°–ª—É—á–∞–π–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ")# üìù –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –æ–∫–Ω–∞
            lb = ttk.label(new_window, image=img)# üñºÔ∏è –°–æ–∑–¥–∞–µ–º Label —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º)
            lb.pack()
            lb.image = img# üîó –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —á—Ç–æ–±—ã –Ω–µ —É–¥–∞–ª–∏–ª–æ—Å—å –∏–∑ –ø–∞–º—è—Ç–∏
            #label.config(image=img)# üì∫ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Label –≤–∏–¥–∂–µ—Ç
            #label.image = img# üîó –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É —á—Ç–æ–±—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–∏–ª–æ—Å—å –∏–∑ –ø–∞–º—è—Ç–∏
        except requests.RequestException as e:
            mb.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {e}")
    progress.stop()

def prog():
    progress["value"] = 0
    progress.start(30)
    window.after(3000, show_image)

window = Tk()
window.title("–ö–∞—Ä—Ç–∏–Ω–∫–∏ —Å —Å–æ–±–∞—á–∫–∞–º–∏")
window.geometry("360x420")
label = ttk.Label()
label.pack(padx=10, pady=10)

button = ttk.Button(text="–ó–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", command=prog)
button.pack(padx=10, pady=10)
progress = ttk.Progressbar(mode="indeterminate", length=300)
progress.pack(pady=10)

width_label = ttk.Label(text="–®–∏—Ä–∏–Ω–∞:")
width_label.pack(side=LEFT, padx=(10, 0))
width_spinbox = ttk.Spinbox(from_=200, to=500, increment=50, width=5)
width_spinbox.pack(side=LEFT, padx=(0, 10))

height_label = ttk.Label(text="–í—ã—Å–æ—Ç–∞:")
height_label.pack(side=LEFT, padx=(10, 0))
height_spinbox = ttk.Spinbox(from_=200, to=500, increment=50, width=5)
height_spinbox.pack(side=LEFT, padx=(0, 10))


window.mainloop()