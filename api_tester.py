#!/usr/bin/env python3
"""
API Tester - –ø—Ä–æ—Å—Ç–∞—è –∑–∞–º–µ–Ω–∞ Postman –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
"""
import requests
import json
from datetime import datetime

def test_api(url, method="GET", headers=None, data=None, description="API Test"):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç API –∏ –≤—ã–≤–æ–¥–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
    print(f"\n{'='*50}")
    print(f"üîç {description}")
    print(f"üì° {method} {url}")
    print(f"‚è∞ {datetime.now().strftime('%H:%M:%S')}")
    print(f"{'='*50}")
    
    try:
        if method.upper() == "GET":
            response = requests.get(url, headers=headers, timeout=10)
        elif method.upper() == "POST":
            response = requests.post(url, headers=headers, json=data, timeout=10)
        
        # –°—Ç–∞—Ç—É—Å
        status_emoji = "‚úÖ" if response.status_code < 400 else "‚ùå"
        print(f"{status_emoji} –°—Ç–∞—Ç—É—Å: {response.status_code}")
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏
        print(f"üìã Content-Type: {response.headers.get('content-type', '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
        print(f"üìè –†–∞–∑–º–µ—Ä: {len(response.content)} –±–∞–π—Ç")
        
        # –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞
        content_type = response.headers.get('content-type', '')
        if 'application/json' in content_type:
            print(f"üìÑ JSON Response:")
            print(json.dumps(response.json(), indent=2, ensure_ascii=False))
        elif 'text' in content_type:
            print(f"üìÑ Text Response:")
            print(response.text[:500] + "..." if len(response.text) > 500 else response.text)
        else:
            print(f"üìÑ Binary Response: {len(response.content)} –±–∞–π—Ç")
            
    except requests.exceptions.Timeout:
        print("‚è±Ô∏è –¢–ê–ô–ú–ê–£–¢: –°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç")
    except requests.exceptions.ConnectionError:
        print("üö´ –û–®–ò–ë–ö–ê –°–û–ï–î–ò–ù–ï–ù–ò–Ø: –ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è")
    except Exception as e:
        print(f"‚ùå –û–®–ò–ë–ö–ê: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API"""
    print("üöÄ API Tester - –ü—Ä–æ—Å—Ç–∞—è –∑–∞–º–µ–Ω–∞ Postman")
    print("–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ø—É–ª—è—Ä–Ω—ã–µ API...")
    
    # –¢–µ—Å—Ç Dog API
    test_api(
        "https://dog.ceo/api/breeds/image/random",
        description="üêï Dog API - –°–ª—É—á–∞–π–Ω–∞—è —Å–æ–±–∞—á–∫–∞"
    )
    
    # –¢–µ—Å—Ç Cat API
    test_api(
        "https://cataas.com/cat",
        description="üê± Cat API - –°–ª—É—á–∞–π–Ω—ã–π –∫–æ—Ç–∏–∫"
    )
    
    # –¢–µ—Å—Ç JSONPlaceholder
    test_api(
        "https://jsonplaceholder.typicode.com/posts/1",
        description="üìù JSONPlaceholder - –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç"
    )
    
    print(f"\n{'='*50}")
    print("‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("üí° –î–ª—è —Å–≤–æ–∏—Ö API –∑–∞–º–µ–Ω–∏—Ç–µ URL –≤ —Ñ—É–Ω–∫—Ü–∏–∏ test_api()")

if __name__ == "__main__":
    main()